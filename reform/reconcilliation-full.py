# This code was slighly adapted from Pavel's notebook to run with local installations
# of the various repos. The original notebook is at
# analysis-notebooks/us/reconciliation$ vim 2026_reconciliation.ipynb


from policyengine_us import Microsimulation
from policyengine_core.reforms import Reform
from policyengine_us_data.datasets.cps import EnhancedCPS_2024, ExtendedCPS_2024

import pandas as pd


baseline_branching_reform = Reform.from_dict(
    {
        "gov.simulation.branch_to_determine_itemization": {
            "2026-01-01.2100-12-31": True
        },
    },
    country_id="us",
)

qbid_reform = Reform.from_dict({
  "gov.irs.deductions.qbi.max.rate": {
    "2026-01-01.2100-12-31": 0.22
  },
  "gov.irs.deductions.qbi.max.w2_wages.rate": {
    "2026-01-01.2100-12-31": 0.5
  },
  "gov.contrib.reconciliation.qbid.in_effect": {
    "2026-01-01.2100-12-31": True
  },
  "gov.irs.deductions.qbi.max.w2_wages.alt_rate": {
    "2026-01-01.2035-12-31": 0.25
  },
  "gov.irs.deductions.qbi.phase_out.start.JOINT": {
    "2026-01-01.2026-12-31": 400600,
    "2027-01-01.2027-12-31": 410500,
    "2028-01-01.2028-12-31": 419000,
    "2029-01-01.2029-12-31": 427350,
    "2030-01-01.2030-12-31": 435900,
    "2031-01-01.2031-12-31": 444500,
    "2032-01-01.2032-12-31": 453250,
    "2033-01-01.2033-12-31": 462200,
    "2034-01-01.2034-12-31": 471400,
    "2035-01-01.2036-12-31": 480700
  },
  "gov.irs.deductions.qbi.phase_out.start.SINGLE": {
    "2026-01-01.2026-12-31": 200300,
    "2027-01-01.2027-12-31": 205250,
    "2028-01-01.2028-12-31": 209500,
    "2029-01-01.2029-12-31": 213650,
    "2030-01-01.2030-12-31": 217900,
    "2031-01-01.2031-12-31": 222250,
    "2032-01-01.2032-12-31": 226600,
    "2033-01-01.2033-12-31": 231100,
    "2034-01-01.2034-12-31": 235700,
    "2035-01-01.2036-12-31": 240350
  },
  "gov.irs.deductions.qbi.phase_out.start.SEPARATE": {
    "2026-01-01.2026-12-31": 200300,
    "2027-01-01.2027-12-31": 205250,
    "2028-01-01.2028-12-31": 209500,
    "2029-01-01.2029-12-31": 213650,
    "2030-01-01.2030-12-31": 217950,
    "2031-01-01.2031-12-31": 222250,
    "2032-01-01.2032-12-31": 226600,
    "2033-01-01.2033-12-31": 231100,
    "2034-01-01.2034-12-31": 235700,
    "2035-01-01.2036-12-31": 240350
  },
  "gov.irs.deductions.qbi.max.business_property.rate": {
    "2026-01-01.2100-12-31": 0.025
  },
  "gov.irs.deductions.qbi.phase_out.start.SURVIVING_SPOUSE": {
    "2026-01-01.2026-12-31": 400600,
    "2027-01-01.2027-12-31": 410500,
    "2028-01-01.2028-12-31": 419000,
    "2029-01-01.2029-12-31": 427350,
    "2030-01-01.2030-12-31": 435900,
    "2031-01-01.2031-12-31": 444500,
    "2032-01-01.2032-12-31": 453250,
    "2033-01-01.2033-12-31": 462200,
    "2034-01-01.2034-12-31": 471400,
    "2035-01-01.2036-12-31": 480700
  },
  "gov.irs.deductions.qbi.phase_out.start.HEAD_OF_HOUSEHOLD": {
    "2026-01-01.2026-12-31": 200300,
    "2027-01-01.2027-12-31": 205250,
    "2028-01-01.2028-12-31": 209500,
    "2029-01-01.2029-12-31": 213650,
    "2030-01-01.2030-12-31": 217950,
    "2031-01-01.2031-12-31": 222250,
    "2032-01-01.2032-12-31": 226600,
    "2033-01-01.2033-12-31": 231100,
    "2034-01-01.2034-12-31": 235700,
    "2035-01-01.2036-12-31": 240350
  }
}, country_id="us")

sd_reform = Reform.from_dict({
  "gov.irs.deductions.standard.amount.JOINT": {
    "2025-01-01.2025-12-31": 32000,
    "2026-01-01.2026-12-31": 32400,
    "2027-01-01.2027-12-31": 33200,
    "2028-01-01.2028-12-31": 33800,
    "2029-01-01.2029-12-31": 32400,
    "2030-01-01.2030-12-31": 33100,
    "2031-01-01.2031-12-31": 33700,
    "2032-01-01.2032-12-31": 34400,
    "2033-01-01.2033-12-31": 35100,
    "2034-01-01.2034-12-31": 35800,
    "2035-01-01.2100-12-31": 36500
  },
  "gov.irs.deductions.standard.amount.SINGLE": {
    "2025-01-01.2025-12-31": 16000,
    "2026-01-01.2026-12-31": 16200,
    "2027-01-01.2027-12-31": 16600,
    "2028-01-01.2028-12-31": 16900,
    "2029-01-01.2029-12-31": 16200,
    "2030-01-01.2030-12-31": 16550,
    "2031-01-01.2031-12-31": 16850,
    "2032-01-01.2032-12-31": 17200,
    "2033-01-01.2033-12-31": 17550,
    "2034-01-01.2034-12-31": 17900,
    "2035-01-01.2100-12-31": 18250
  },
  "gov.irs.deductions.standard.amount.SEPARATE": {
    "2025-01-01.2025-12-31": 16000,
    "2026-01-01.2026-12-31": 16200,
    "2027-01-01.2027-12-31": 16600,
    "2028-01-01.2028-12-31": 16900,
    "2029-01-01.2029-12-31": 16200,
    "2030-01-01.2030-12-31": 16550,
    "2031-01-01.2031-12-31": 16850,
    "2032-01-01.2032-12-31": 17200,
    "2033-01-01.2033-12-31": 17550,
    "2034-01-01.2034-12-31": 17900,
    "2035-01-01.2100-12-31": 18250
  },
  "gov.irs.deductions.standard.amount.SURVIVING_SPOUSE": {
    "2025-01-01.2025-12-31": 32000,
    "2026-01-01.2026-12-31": 32400,
    "2027-01-01.2027-12-31": 33200,
    "2028-01-01.2028-12-31": 33800,
    "2029-01-01.2029-12-31": 32400,
    "2030-01-01.2030-12-31": 33100,
    "2031-01-01.2031-12-31": 33700,
    "2032-01-01.2032-12-31": 34400,
    "2033-01-01.2033-12-31": 35100,
    "2034-01-01.2034-12-31": 35800,
    "2035-01-01.2100-12-31": 36500
  },
  "gov.irs.deductions.standard.amount.HEAD_OF_HOUSEHOLD": {
    "2025-01-01.2025-12-31": 24000,
    "2026-01-01.2026-12-31": 24300,
    "2027-01-01.2027-12-31": 24900,
    "2028-01-01.2028-12-31": 25350,
    "2029-01-01.2029-12-31": 24350,
    "2030-01-01.2030-12-31": 24850,
    "2031-01-01.2031-12-31": 25300,
    "2032-01-01.2032-12-31": 25800,
    "2033-01-01.2033-12-31": 26350,
    "2034-01-01.2034-12-31": 26850,
    "2035-01-01.2100-12-31": 27400
  }
}, country_id="us")

exemption_reform = Reform.from_dict({
  "gov.irs.income.exemption.amount": {
    "2026-01-01.2100-12-31": 0
  }
}, country_id="us")


amt_reform = Reform.from_dict({
  "gov.irs.income.amt.exemption.amount.JOINT": {
    "2026-01-01.2026-12-31": 139000,
    "2027-01-01.2027-12-31": 142500,
    "2028-01-01.2028-12-31": 145500,
    "2029-01-01.2029-12-31": 148400,
    "2030-01-01.2030-12-31": 151300,
    "2031-01-01.2031-12-31": 154300,
    "2032-01-01.2032-12-31": 157400,
    "2033-01-01.2033-12-31": 160500,
    "2034-01-01.2034-12-31": 163700,
    "2035-01-01.2036-12-31": 166900
  },
  "gov.irs.income.amt.exemption.amount.SINGLE": {
    "2026-01-01.2026-12-31": 89400,
    "2027-01-01.2027-12-31": 91700,
    "2028-01-01.2028-12-31": 93500,
    "2029-01-01.2029-12-31": 95400,
    "2030-01-01.2030-12-31": 97300,
    "2031-01-01.2031-12-31": 99200,
    "2032-01-01.2032-12-31": 101200,
    "2033-01-01.2033-12-31": 103200,
    "2034-01-01.2034-12-31": 105300,
    "2035-01-01.2036-12-31": 107300
  },
  "gov.irs.income.amt.exemption.amount.SEPARATE": {
    "2026-01-01.2026-12-31": 69600,
    "2027-01-01.2027-12-31": 71300,
    "2028-01-01.2028-12-31": 72700,
    "2029-01-01.2029-12-31": 74200,
    "2030-01-01.2030-12-31": 75700,
    "2031-01-01.2031-12-31": 77200,
    "2032-01-01.2032-12-31": 78700,
    "2033-01-01.2033-12-31": 80200,
    "2034-01-01.2034-12-31": 81800,
    "2035-01-01.2036-12-31": 83500
  },
  "gov.irs.income.amt.exemption.phase_out.start.JOINT": {
    "2026-01-01.2026-12-31": 1271900,
    "2027-01-01.2027-12-31": 1303200,
    "2028-01-01.2028-12-31": 1330200,
    "2029-01-01.2029-12-31": 1356800,
    "2030-01-01.2030-12-31": 1383800,
    "2031-01-01.2031-12-31": 1411200,
    "2032-01-01.2032-12-31": 1438900,
    "2033-01-01.2033-12-31": 1467400,
    "2034-01-01.2034-12-31": 1496600,
    "2035-01-01.2036-12-31": 1526100
  },
  "gov.irs.income.amt.exemption.phase_out.start.SINGLE": {
    "2026-01-01.2026-12-31": 635900,
    "2027-01-01.2027-12-31": 651600,
    "2028-01-01.2028-12-31": 665100,
    "2029-01-01.2029-12-31": 678400,
    "2030-01-01.2030-12-31": 691900,
    "2031-01-01.2031-12-31": 705600,
    "2032-01-01.2032-12-31": 719500,
    "2033-01-01.2033-12-31": 733700,
    "2034-01-01.2034-12-31": 748300,
    "2035-01-01.2036-12-31": 763100
  },
  "gov.irs.income.amt.exemption.amount.SURVIVING_SPOUSE": {
    "2026-01-01.2026-12-31": 139100,
    "2027-01-01.2027-12-31": 142500,
    "2028-01-01.2028-12-31": 145500,
    "2029-01-01.2029-12-31": 148400,
    "2030-01-01.2030-12-31": 151300,
    "2031-01-01.2031-12-31": 154300,
    "2032-01-01.2032-12-31": 157400,
    "2033-01-01.2033-12-31": 160500,
    "2034-01-01.2034-12-31": 163700,
    "2035-01-01.2036-12-31": 166900
  },
  "gov.irs.income.amt.exemption.amount.HEAD_OF_HOUSEHOLD": {
    "2026-01-01.2026-12-31": 89400,
    "2027-01-01.2027-12-31": 91700,
    "2028-01-01.2028-12-31": 93600,
    "2029-01-01.2029-12-31": 95400,
    "2030-01-01.2030-12-31": 97300,
    "2031-01-01.2031-12-31": 99200,
    "2032-01-01.2032-12-31": 101200,
    "2033-01-01.2033-12-31": 103200,
    "2034-01-01.2034-12-31": 105300,
    "2035-01-01.2036-12-31": 107300
  },
  "gov.irs.income.amt.exemption.phase_out.start.SEPARATE": {
    "2026-01-01.2026-12-31": 635900,
    "2027-01-01.2027-12-31": 651600,
    "2028-01-01.2028-12-31": 665100,
    "2029-01-01.2029-12-31": 678400,
    "2030-01-01.2030-12-31": 691900,
    "2031-01-01.2031-12-31": 705600,
    "2032-01-01.2032-12-31": 719500,
    "2033-01-01.2033-12-31": 733700,
    "2034-01-01.2034-12-31": 748300,
    "2035-01-01.2036-12-31": 763100
  },
  "gov.irs.income.amt.exemption.phase_out.start.SURVIVING_SPOUSE": {
    "2026-01-01.2026-12-31": 1271900,
    "2027-01-01.2027-12-31": 1303200,
    "2028-01-01.2028-12-31": 1330200,
    "2029-01-01.2029-12-31": 1356800,
    "2030-01-01.2030-12-31": 1383800,
    "2031-01-01.2031-12-31": 1411200,
    "2032-01-01.2032-12-31": 1438900,
    "2033-01-01.2033-12-31": 1467400,
    "2034-01-01.2034-12-31": 1496600,
    "2035-01-01.2036-12-31": 1526100
  },
  "gov.irs.income.amt.exemption.phase_out.start.HEAD_OF_HOUSEHOLD": {
    "2026-01-01.2026-12-31": 635900,
    "2027-01-01.2027-12-31": 651600,
    "2028-01-01.2028-12-31": 665100,
    "2029-01-01.2029-12-31": 678400,
    "2030-01-01.2030-12-31": 691900,
    "2031-01-01.2031-12-31": 705600,
    "2032-01-01.2032-12-31": 719500,
    "2033-01-01.2033-12-31": 733700,
    "2034-01-01.2034-12-31": 748300,
    "2035-01-01.2036-12-31": 763100
  }
}, country_id="us")

various_itemized_deductions_reform = Reform.from_dict({
  "gov.irs.deductions.itemized.misc.applies": {
    "2026-01-01.2100-12-31": False
  },
  "gov.irs.deductions.itemized.limitation.agi_rate": {
    "2026-01-01.2100-12-31": 0
  },
  "gov.irs.deductions.itemized.interest.mortgage.cap.JOINT": {
    "2026-01-01.2100-12-31": 750000
  },
  "gov.irs.deductions.itemized.interest.mortgage.cap.SINGLE": {
    "2026-01-01.2100-12-31": 750000
  },
  "gov.irs.deductions.itemized.interest.mortgage.cap.SEPARATE": {
    "2026-01-01.2100-12-31": 375000
  },
  "gov.irs.deductions.itemized.interest.mortgage.cap.SURVIVING_SPOUSE": {
    "2026-01-01.2100-12-31": 750000
  },
  "gov.irs.deductions.itemized.interest.mortgage.cap.HEAD_OF_HOUSEHOLD": {
    "2026-01-01.2100-12-31": 750000
  }
}, country_id="us")

tax_rate_reform = Reform.from_dict({
  "gov.irs.income.bracket.rates.2": {
    "2026-01-01.2100-12-31": 0.12
  },
  "gov.irs.income.bracket.rates.3": {
    "2026-01-01.2100-12-31": 0.22
  },
  "gov.irs.income.bracket.rates.4": {
    "2026-01-01.2100-12-31": 0.24
  },
  "gov.irs.income.bracket.rates.5": {
    "2026-01-01.2100-12-31": 0.32
  },
  "gov.irs.income.bracket.rates.7": {
    "2026-01-01.2100-12-31": 0.37
  },
  "gov.irs.income.bracket.thresholds.3.JOINT": {
    "2026-01-01.2026-12-31": 208300,
    "2027-01-01.2027-12-31": 213400,
    "2028-01-01.2028-12-31": 217850,
    "2029-01-01.2029-12-31": 222200,
    "2030-01-01.2030-12-31": 226650,
    "2031-01-01.2031-12-31": 231100,
    "2032-01-01.2032-12-31": 235650,
    "2033-01-01.2033-12-31": 240300,
    "2034-01-01.2034-12-31": 245100,
    "2035-01-01.2036-12-31": 249950
  },
  "gov.irs.income.bracket.thresholds.4.JOINT": {
    "2026-01-01.2026-12-31": 397650,
    "2027-01-01.2027-12-31": 407450,
    "2028-01-01.2028-12-31": 415900,
    "2029-01-01.2029-12-31": 424250,
    "2030-01-01.2030-12-31": 432700,
    "2031-01-01.2031-12-31": 441250,
    "2032-01-01.2032-12-31": 449900,
    "2033-01-01.2033-12-31": 458800,
    "2034-01-01.2034-12-31": 467950,
    "2035-01-01.2036-12-31": 477150
  },
  "gov.irs.income.bracket.thresholds.5.JOINT": {
    "2026-01-01.2026-12-31": 512950,
    "2027-01-01.2027-12-31": 525600,
    "2028-01-01.2028-12-31": 536500,
    "2029-01-01.2029-12-31": 547200,
    "2030-01-01.2030-12-31": 558100,
    "2031-01-01.2031-12-31": 569150,
    "2032-01-01.2032-12-31": 580350,
    "2033-01-01.2033-12-31": 591800,
    "2034-01-01.2034-12-31": 603550,
    "2035-01-01.2037-12-31": 615500
  },
  "gov.irs.income.bracket.thresholds.6.JOINT": {
    "2026-01-01.2026-12-31": 772750,
    "2027-01-01.2027-12-31": 791800,
    "2028-01-01.2028-12-31": 808200,
    "2029-01-01.2029-12-31": 824400,
    "2030-01-01.2030-12-31": 840800,
    "2031-01-01.2031-12-31": 857400,
    "2032-01-01.2032-12-31": 874250,
    "2033-01-01.2033-12-31": 891550,
    "2034-01-01.2034-12-31": 909300,
    "2035-01-01.2036-12-31": 927250
  },
  "gov.irs.income.bracket.thresholds.3.SINGLE": {
    "2026-01-01.2026-12-31": 104900,
    "2027-01-01.2027-12-31": 107500,
    "2028-01-01.2028-12-31": 109700,
    "2029-01-01.2029-12-31": 111900,
    "2030-01-01.2030-12-31": 114150,
    "2031-01-01.2031-12-31": 116400,
    "2032-01-01.2032-12-31": 118700,
    "2033-01-01.2033-12-31": 121050,
    "2034-01-01.2034-12-31": 123450,
    "2035-01-01.2036-12-31": 125900
  },
  "gov.irs.income.bracket.thresholds.4.SINGLE": {
    "2026-01-01.2026-12-31": 198800,
    "2027-01-01.2027-12-31": 203700,
    "2028-01-01.2028-12-31": 207950,
    "2029-01-01.2029-12-31": 212100,
    "2030-01-01.2030-12-31": 216350,
    "2031-01-01.2031-12-31": 220600,
    "2032-01-01.2032-12-31": 224950,
    "2033-01-01.2033-12-31": 229400,
    "2034-01-01.2034-12-31": 233950,
    "2035-01-01.2036-12-31": 238550
  },
  "gov.irs.income.bracket.thresholds.5.SINGLE": {
    "2026-01-01.2026-12-31": 256450,
    "2027-01-01.2027-12-31": 262800,
    "2028-01-01.2028-12-31": 268250,
    "2029-01-01.2029-12-31": 273600,
    "2030-01-01.2030-12-31": 279050,
    "2031-01-01.2031-12-31": 284550,
    "2032-01-01.2032-12-31": 290150,
    "2033-01-01.2033-12-31": 295900,
    "2034-01-01.2034-12-31": 301750,
    "2035-01-01.2100-12-31": 307750
  },
  "gov.irs.income.bracket.thresholds.6.SINGLE": {
    "2026-01-01.2026-12-31": 643950,
    "2027-01-01.2027-12-31": 659800,
    "2028-01-01.2028-12-31": 673500,
    "2029-01-01.2029-12-31": 687000,
    "2030-01-01.2030-12-31": 700650,
    "2031-01-01.2031-12-31": 714500,
    "2032-01-01.2032-12-31": 728550,
    "2033-01-01.2033-12-31": 742950,
    "2034-01-01.2034-12-31": 757750,
    "2035-01-01.2036-12-31": 772700
  },
  "gov.irs.income.bracket.thresholds.3.SEPARATE": {
    "2026-01-01.2026-12-31": 104900,
    "2027-01-01.2027-12-31": 107500,
    "2028-01-01.2028-12-31": 109700,
    "2029-01-01.2029-12-31": 111900,
    "2030-01-01.2030-12-31": 114150,
    "2031-01-01.2031-12-31": 116400,
    "2032-01-01.2032-12-31": 118700,
    "2033-01-01.2033-12-31": 121050,
    "2034-01-01.2034-12-31": 123450,
    "2035-01-01.2036-12-31": 125900
  },
  "gov.irs.income.bracket.thresholds.4.SEPARATE": {
    "2026-01-01.2026-12-31": 198800,
    "2027-01-01.2027-12-31": 203700,
    "2028-01-01.2028-12-31": 207950,
    "2029-01-01.2029-12-31": 212100,
    "2030-01-01.2030-12-31": 216350,
    "2031-01-01.2031-12-31": 220600,
    "2032-01-01.2032-12-31": 224950,
    "2033-01-01.2033-12-31": 229400,
    "2034-01-01.2034-12-31": 233950,
    "2035-01-01.2036-12-31": 238550
  },
  "gov.irs.income.bracket.thresholds.5.SEPARATE": {
    "2026-01-01.2026-12-31": 256450,
    "2027-01-01.2027-12-31": 262800,
    "2028-01-01.2028-12-31": 268250,
    "2029-01-01.2029-12-31": 273600,
    "2030-01-01.2030-12-31": 279050,
    "2031-01-01.2031-12-31": 284550,
    "2032-01-01.2032-12-31": 290150,
    "2033-01-01.2033-12-31": 295900,
    "2034-01-01.2034-12-31": 301750,
    "2035-01-01.2100-12-31": 307750
  },
  "gov.irs.income.bracket.thresholds.6.SEPARATE": {
    "2026-01-01.2026-12-31": 386350,
    "2027-01-01.2027-12-31": 395900,
    "2028-01-01.2028-12-31": 404100,
    "2029-01-01.2029-12-31": 412200,
    "2030-01-01.2030-12-31": 420400,
    "2031-01-01.2031-12-31": 428700,
    "2032-01-01.2032-12-31": 437100,
    "2033-01-01.2033-12-31": 445750,
    "2034-01-01.2034-12-31": 454650,
    "2035-01-01.2036-12-31": 463600
  },
  "gov.irs.income.bracket.thresholds.3.SURVIVING_SPOUSE": {
    "2026-01-01.2026-12-31": 208300,
    "2027-01-01.2027-12-31": 213400,
    "2028-01-01.2028-12-31": 217850,
    "2029-01-01.2029-12-31": 222200,
    "2030-01-01.2030-12-31": 226650,
    "2031-01-01.2031-12-31": 231100,
    "2032-01-01.2032-12-31": 235650,
    "2033-01-01.2033-12-31": 240300,
    "2034-01-01.2034-12-31": 245100,
    "2035-01-01.2036-12-31": 249950
  },
  "gov.irs.income.bracket.thresholds.4.SURVIVING_SPOUSE": {
    "2026-01-01.2026-12-31": 397650,
    "2027-01-01.2027-12-31": 407450,
    "2028-01-01.2028-12-31": 415900,
    "2029-01-01.2029-12-31": 424250,
    "2030-01-01.2030-12-31": 432700,
    "2031-01-01.2031-12-31": 441250,
    "2032-01-01.2032-12-31": 449900,
    "2033-01-01.2033-12-31": 458800,
    "2034-01-01.2034-12-31": 467950,
    "2035-01-01.2036-12-31": 477150
  },
  "gov.irs.income.bracket.thresholds.5.SURVIVING_SPOUSE": {
    "2026-01-01.2026-12-31": 512950,
    "2027-01-01.2027-12-31": 525600,
    "2028-01-01.2028-12-31": 536500,
    "2029-01-01.2029-12-31": 547200,
    "2030-01-01.2030-12-31": 558100,
    "2031-01-01.2031-12-31": 569150,
    "2032-01-01.2032-12-31": 580350,
    "2033-01-01.2033-12-31": 591800,
    "2034-01-01.2034-12-31": 603550,
    "2035-01-01.2037-12-31": 615500
  },
  "gov.irs.income.bracket.thresholds.6.SURVIVING_SPOUSE": {
    "2026-01-01.2026-12-31": 772750,
    "2027-01-01.2027-12-31": 791800,
    "2028-01-01.2028-12-31": 808200,
    "2029-01-01.2029-12-31": 824400,
    "2030-01-01.2030-12-31": 840800,
    "2031-01-01.2031-12-31": 857400,
    "2032-01-01.2032-12-31": 874250,
    "2033-01-01.2033-12-31": 891550,
    "2034-01-01.2034-12-31": 909300,
    "2035-01-01.2036-12-31": 927300
  },
  "gov.irs.income.bracket.thresholds.3.HEAD_OF_HOUSEHOLD": {
    "2026-01-01.2026-12-31": 104900,
    "2027-01-01.2027-12-31": 107500,
    "2028-01-01.2028-12-31": 109700,
    "2029-01-01.2029-12-31": 111900,
    "2030-01-01.2030-12-31": 114150,
    "2031-01-01.2031-12-31": 116400,
    "2032-01-01.2032-12-31": 118700,
    "2033-01-01.2033-12-31": 121050,
    "2034-01-01.2034-12-31": 123450,
    "2035-01-01.2036-12-31": 125900
  },
  "gov.irs.income.bracket.thresholds.4.HEAD_OF_HOUSEHOLD": {
    "2026-01-01.2026-12-31": 198800,
    "2027-01-01.2027-12-31": 203700,
    "2028-01-01.2028-12-31": 207950,
    "2029-01-01.2029-12-31": 212100,
    "2030-01-01.2030-12-31": 216350,
    "2031-01-01.2031-12-31": 220600,
    "2032-01-01.2032-12-31": 224950,
    "2033-01-01.2033-12-31": 229400,
    "2034-01-01.2034-12-31": 233950,
    "2035-01-01.2036-12-31": 238550
  },
  "gov.irs.income.bracket.thresholds.5.HEAD_OF_HOUSEHOLD": {
    "2026-01-01.2026-12-31": 256486,
    "2027-01-01.2027-12-31": 262806,
    "2028-01-01.2028-12-31": 268250,
    "2029-01-01.2029-12-31": 273621,
    "2030-01-01.2030-12-31": 279065,
    "2031-01-01.2031-12-31": 284584,
    "2032-01-01.2032-12-31": 290175,
    "2033-01-01.2033-12-31": 295914,
    "2034-01-01.2034-12-31": 301800,
    "2035-01-01.2036-12-31": 307759
  },
  "gov.irs.income.bracket.thresholds.6.HEAD_OF_HOUSEHOLD": {
    "2026-01-01.2026-12-31": 643950,
    "2027-01-01.2027-12-31": 659800,
    "2028-01-01.2028-12-31": 673500,
    "2029-01-01.2029-12-31": 687000,
    "2030-01-01.2030-12-31": 700650,
    "2031-01-01.2031-12-31": 714500,
    "2032-01-01.2032-12-31": 728550,
    "2033-01-01.2033-12-31": 742950,
    "2034-01-01.2034-12-31": 757750,
    "2035-01-01.2036-12-31": 772700
  }
}, country_id="us")

ctc_expansion_reform = Reform.from_dict({
  "gov.irs.credits.ctc.amount.base[0].amount": {
    "2026-01-01.2028-12-31": 2000,
    "2029-01-01.2030-12-31": 2200,
    "2031-01-01.2033-12-31": 2300,
    "2034-01-01.2100-12-31": 2400
  },
  "gov.irs.credits.ctc.amount.adult_dependent": {
    "2026-01-01.2100-12-31": 500
  },
  "gov.irs.credits.ctc.phase_out.threshold.JOINT": {
    "2026-01-01.2100-12-31": 400000
  },
  "gov.irs.credits.ctc.refundable.individual_max": {
    "2026-01-01.2026-12-31": 1700,
    "2027-01-01.2028-12-31": 1800,
    "2029-01-01.2031-12-31": 1900,
    "2032-01-01.2033-12-31": 2000,
    "2034-01-01.2100-12-31": 2100
  },
  "gov.irs.credits.ctc.phase_out.threshold.SINGLE": {
    "2026-01-01.2100-12-31": 200000
  },
  "gov.irs.credits.ctc.phase_out.threshold.SEPARATE": {
    "2026-01-01.2100-12-31": 200000
  },
  "gov.irs.credits.ctc.refundable.phase_in.threshold": {
    "2026-01-01.2100-12-31": 2500
  },
  "gov.irs.credits.ctc.phase_out.threshold.SURVIVING_SPOUSE": {
    "2026-01-01.2100-12-31": 400000
  },
  "gov.irs.credits.ctc.phase_out.threshold.HEAD_OF_HOUSEHOLD": {
    "2026-01-01.2100-12-31": 200000
  }
}, country_id="us")

ctc_temp_enhancement_reform = Reform.from_dict({
  "gov.irs.credits.ctc.amount.base[0].amount": {
    "2025-01-01.2028-12-31": 2500,
  }
}, country_id="us")

tax_rate_reform.__name__ = "Tax Rate Reform"
sd_reform.__name__ = "Standard Deduction Reform"
exemption_reform.__name__ = "Exemption Reform"
ctc_expansion_reform.__name__ = "CTC Expansion Reform"
ctc_temp_enhancement_reform.__name__ = "CTC Temporary Enhancement Reform"
qbid_reform.__name__ = "QBID Reform"
amt_reform.__name__ = "AMT Reform"
various_itemized_deductions_reform.__name__ = "Various Itemized Deductions Reform"

years = range(2025, 2036)  # 2025 to 2035 inclusive
reforms = [
    tax_rate_reform,
    sd_reform,
    exemption_reform,
    ctc_expansion_reform,
    ctc_temp_enhancement_reform,
    qbid_reform,
    amt_reform,
    various_itemized_deductions_reform
]

results_df = pd.DataFrame(columns=["Year", "Reform", "Impact (billions)"])


def calculate_stacked_budgetary_impact(reforms, year, results_df):
    """
    Calculate the incremental budgetary impact of each reform when applied sequentially.
    
    Parameters:
    reforms - List of reform objects
    year - Year to perform calculation for
    results_df - DataFrame to append results to
    
    Returns:
    Updated results_df with new rows
    """
    # Start with baseline
    baseline = Microsimulation(
        # TODO: figure out how this is different than using the baseline argument
        reform=baseline_branching_reform,
        dataset=EnhancedCPS_2024
        #dataset=ExtendedCPS_2024
    )
    baseline_income = baseline.calculate("income_tax", map_to="household", period=year).sum()
    
    previous_income = baseline_income
    cumulative_reform = baseline_branching_reform
    
    print(f"\nCalculating sequential reforms for Year: {year}...")
    
    for i, reform in enumerate(reforms):
        # Add the current reform to the cumulative reform
        if i == 0:
            # For the first reform, start with baseline_branching_reform and add the current reform
            cumulative_reform = (baseline_branching_reform, reform)
        else:
            # For subsequent reforms, add to the already existing cumulative reform
            cumulative_reform = (cumulative_reform, reform)
        
        # Calculate with the cumulative reform
        reformed = Microsimulation(
            reform=cumulative_reform, 
            dataset=EnhancedCPS_2024
            #dataset=ExtendedCPS_2024

        )
        reformed_income = reformed.calculate("income_tax", map_to="household", period=year).sum()
        
        # Calculate impact compared to the previous state
        budgetary_impact = reformed_income - previous_income
        impact_billions = budgetary_impact / 1e9
        
        print(f"  {reform.__name__}: ${impact_billions:.3f} billion")
        
        # Add to results
        new_row = {
            "Year": year,
            "Reform": reform.__name__,
            "Impact (billions)": impact_billions
        }
        results_df = pd.concat([results_df, pd.DataFrame([new_row])], ignore_index=True)
        
        # Update for next iteration
        previous_income = reformed_income
    
    return results_df

# Run calculations for each year
for year in years:
    results_df = calculate_stacked_budgetary_impact(reforms, year, results_df)

